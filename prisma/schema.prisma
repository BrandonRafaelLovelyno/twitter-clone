// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @map("_id") @db.ObjectId @default(auto())
  bio String? 
  username String? @unique
  email String? @unique
  emailVerified Boolean?
  name String?
  hashedPassword String?
  image String?
  coverImage String?
  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt
  followingIDs String[] @db.ObjectId
  followersIDs String[] @db.ObjectId
  hasNotification Boolean?
  
  posts Post[]
  comments Comment[] 
  notifications Notification[] 

}

model Post{
  id String @id @map("_id") @db.ObjectId @default(auto())
  body String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId String @db.ObjectId
  likedIds String[] @db.ObjectId
  image String?
  comments Comment[]

  user User @relation(fields: [userId], references: [id], onDelete:Cascade)
}

model Comment{
  id String @id @map("_id") @db.ObjectId @default(auto())
  body String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId String @db.ObjectId
  postId String @db.ObjectId

  post Post @relation(fields: [postId],references: [id],onDelete:Cascade)
  user User @relation(fields: [userId],references: [id],onDelete:Cascade)
}

model Notification{
  id String @id @db.ObjectId @map("_id") @default(auto())
  body String
  userId String @db.ObjectId

  user User @relation(fields: [userId],references: [id],onDelete:Cascade)

}